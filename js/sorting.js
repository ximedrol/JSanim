$(document).ready(function(){
	var minNumber,maxNumber,randomNumber,i,swapPot,number1,number2,Pot1,Pot2,interVal,timeOut; //объявление переменных
	var arrayOfnumbers = new Array(); //массив для чисел, которые будут отсортированы

	//Генерация случайных чисел
	$('.randomGenerate').click(function(){ //запуск функции генерации случайных чисел
		$('.sorting').removeAttr('disabled').show(); //активация кнопки "Начать процесс сортировки"
		$('#genNumbers,#info span').html(''); //очистка сгенерированных чисел и данных о процессе сортировки
		clearTimeout(timeOut); //отмена выполнения таймера
		clearInterval(interVal); //отмена выполнения интервала
		//Генерация случайных чисел, заполнение исходной строки с числами, массива.
		for (i = 0; i < 8; i++) { // условие , при котором формируется 8 случайных чисел
			minNumber = 1; //минимальное число
			maxNumber = 9999;  //максимальное число
			randomNumber = Math.round((Math.random() * (maxNumber - minNumber) + minNumber)); //вывод случайного числа из диапазона заданных чисел
			$('#info .original_numbers').append(randomNumber + ' '); //заполнение блока 'Данные до сортировки:' случайными числами
			arrayOfnumbers[i] = randomNumber; //заполнение массива случайными числами
			$('#genNumbers').append('<div class="num">' + randomNumber + '</div>'); //генерация "горшков золота" с числами
		}
	});	
	//Сброс окна в исходное состояние	
	$('.reset').click(function(){
	location.reload();
   });

	//Сортировка чисел
	$('.sorting').click(function(){ //начало выполнения функции сортировки
		$('#info .currentEntry').show(); //после начала сортировки делаем видимым информацию о текущем проходе
		$(this).attr('disabled','disabled'); //отключаем кнопку "Начать процесс сортировки"
		var entry = 1; //задаем начальное значение для внешнего цикла (количество проходов)
		//функция сортировки
		function sorting() {
			//проверка количества выполненных проходов, чтобы остановить сортировку, когда выполнено 8 проходов
			if( entry < 9 ){ //проверяем условие, при котором выполняется цикл по достижению 8 проходов
				$('#info .currentEntry').text('Проход: ' + entry + '/8'); //вывод номера текущего прохода
				entry = entry + 1; //увеличение количества проходов по мере их выполнения
				i = 1; //задаем начальное значение для внутреннего цикла (для проходов по каждому из чисел)
				$('#info .result').text('Сортировка в процессе..'); //выводим информацию о том, что в данный момент числа сортируются
				//функция, которая будет выполняться с задержкой в 1 секунду
				(function tick() {
					if (i < 8) { //проверяем значение внутреннего цикла, чтобы обойти 8 пар чисел
						if( arrayOfnumbers[i] < arrayOfnumbers[i-1] ){ //сравниваем текущее и предыдущее число массива
							number1 = i; //сохраняем индекс текущего элемента массива
							number2 = i-1; //сохраняем индекс предыдущего элемента массива
							Pot1 = $('#genNumbers .num:eq('+number1+')'); //производим выборку текущего числа(горшка с золотом)
							Pot2 = $('#genNumbers .num:eq('+number2+')'); //производим выборку предыдущего числа(горшка с золотом)
							Pot1.swap(Pot2); //анимация текущего горшка с предыдущим

							//обмениваем числа в массиве
							swapPot = arrayOfnumbers[i];
							arrayOfnumbers[i] = arrayOfnumbers[i-1];
							arrayOfnumbers[i-1] = swapPot;
							timeOut = setTimeout(arguments.callee, 1000); //выполняем функцию, которая выполняется в данный момент, задав таймер на 1 секунду, для задержки соответственно на 1 секунду
						}else{
							timeOut = setTimeout(arguments.callee, 0); //выполняем функцию, которая выполняется в данный момент, задав таймер на 0, чтобы не было задержки, когда числа не нужно обменивать
						}
						i++;
					}else{ //если на текущем проходе было проверено 10 пар чисел, то отменяем выполнение интервала, чтобы не было задержки между проходами
						clearInterval(interVal); //отмена выполнения интервала
						sorting();  //запускаем функцию сортировки
						interVal = setInterval(sorting, 10000); //запускаем выполнение функции sorting с интервалом в 10 секунду
					}
				})();
			}else{
				clearTimeout(timeOut); //отмена выполнения таймера
				clearInterval(interVal); //отмена выполнения интервала
				$('#info .result').text('Сортировка завершена!'); //оповещаем пользователя о том, что сортировка окончена
				for (var i = 0; i < arrayOfnumbers.length;i++) { //цикл для вывода сортированных чисел 
					s = String(arrayOfnumbers[i]) + " ";
					$('#info .sorted_numbers').append (s); // заполнение блока 'Данные после сортировки:' отсортированными чисалми
				}			}
		}
		sorting(); //запускаем функцию сортировки

	});
});
